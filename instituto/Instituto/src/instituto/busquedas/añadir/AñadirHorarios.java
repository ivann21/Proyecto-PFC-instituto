/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package instituto.busquedas.añadir;

import instituto.busquedas.Busqueda;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;

public class AñadirHorarios extends javax.swing.JFrame {

      private Busqueda parentPanel;
      
    public AñadirHorarios(Busqueda parentPanel) {
        this.parentPanel = parentPanel;
        initComponents();
         populateComboBoxes();
    }
     private void populateComboBoxes() {
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(getItems("ASIGNATURAS")));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(getItems("PROFESORES")));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(getItems("AULAS")));
    }

    private String[] getItems(String tableName) {
        List<String> items = new ArrayList<>();
        try (Connection conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/", "SA", "");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM PUBLIC.INSTITUTO." + tableName)) {

            while (rs.next()) {
                items.add(rs.getString(1) + " - " + rs.getString(2));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return items.toArray(new String[0]);
    }

    private String[] getHours() {
        List<String> hours = new ArrayList<>();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalTime start = LocalTime.of(8, 30);
        for (int i = 0; i < 12; i++) {
            hours.add(start.plusMinutes(i * 55).format(formatter));
        }
        return hours.toArray(new String[0]);
    }
private boolean isDuplicate(Connection conn, int profesorId, String dia, String horaInicio, String horaFin) throws SQLException {
    String query = "SELECT COUNT(*) FROM PUBLIC.INSTITUTO.HORARIOS WHERE \"ID profesor\" = ? AND " +
                   "((\"dia de la semana\" = ? AND " +
                   "((\"hora de inicio\" >= ? AND \"hora de inicio\" < ?) OR " +
                   "(\"hora de fin\" > ? AND \"hora de fin\" <= ?) OR " +
                   "(\"hora de inicio\" <= ? AND \"hora de fin\" >= ?))) OR " +
                   "(\"dia de la semana\" <> ? AND " +
                   "((\"hora de inicio\" >= ? AND \"hora de inicio\" < ?) OR " +
                   "(\"hora de fin\" > ? AND \"hora de fin\" <= ?) OR " +
                   "(\"hora de inicio\" <= ? AND \"hora de fin\" >= ?))))";
    try (PreparedStatement pstmt = conn.prepareStatement(query)) {
        pstmt.setInt(1, profesorId);
        pstmt.setString(2, dia);
        pstmt.setTime(3, Time.valueOf(horaInicio));
        pstmt.setTime(4, Time.valueOf(horaFin));
        pstmt.setTime(5, Time.valueOf(horaInicio));
        pstmt.setTime(6, Time.valueOf(horaFin));
        pstmt.setTime(7, Time.valueOf(horaInicio));
        pstmt.setTime(8, Time.valueOf(horaFin));
        pstmt.setString(9, dia);
        pstmt.setTime(10, Time.valueOf(horaInicio));
        pstmt.setTime(11, Time.valueOf(horaFin));
        pstmt.setTime(12, Time.valueOf(horaInicio));
        pstmt.setTime(13, Time.valueOf(horaFin));
        pstmt.setTime(14, Time.valueOf(horaInicio));
        pstmt.setTime(15, Time.valueOf(horaFin));
        try (ResultSet rs = pstmt.executeQuery()) {
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        }
    }
    return false;
}
       
private String sumarMinutos(String hora, int minutos) {
    LocalTime localTime = LocalTime.parse(hora);
    localTime = localTime.plusMinutes(minutos);
    return localTime.toString();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Añadir Horiario");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 48, 244, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 102, 244, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 156, 244, -1));

        jLabel1.setText("Asignatura");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 26, -1, -1));

        jLabel2.setText("Profesor");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 82, -1, -1));

        jLabel3.setText("Aula");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 134, -1, -1));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes" }));
        getContentPane().add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 50, 244, -1));

        jLabel4.setText("Dia de la semana");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 28, -1, -1));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:30:00", "9:30:00", "10:25:00", "11:45:00", "12:40:00", "13:35:00" }));
        getContentPane().add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 106, 244, -1));

        jLabel5.setText("hora de inicio");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 84, -1, -1));

        jLabel6.setText("hora de fin");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 134, -1, -1));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:25:00", "10:20:00", "11:15:00", "12:35:00", "13:30:00", "14:25:00" }));
        getContentPane().add(jComboBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 156, 244, -1));

        jButton1.setText("añadir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 196, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   int asignaturaId = Integer.parseInt(jComboBox1.getSelectedItem().toString().split(" ")[0]);
    int profesorId = Integer.parseInt(jComboBox2.getSelectedItem().toString().split(" ")[0]);
    int aulaId = Integer.parseInt(jComboBox3.getSelectedItem().toString().split(" ")[0]);
    String dia = jComboBox4.getSelectedItem().toString();
    String horaInicio = jComboBox5.getSelectedItem().toString();
    String horaFin = jComboBox6.getSelectedItem().toString();

    try (Connection conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/", "SA", "")) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("H:mm:ss");

        LocalTime horaInicioTime = LocalTime.parse(horaInicio, formatter);
        LocalTime horaFinTime = LocalTime.parse(horaFin, formatter);
        
        while (horaInicioTime.isBefore(horaFinTime)) {
            System.out.println("Hora de inicio: " + horaInicioTime);

            LocalTime horaFinClaseTime = horaInicioTime.plusMinutes(55);
            System.out.println("Hora de fin de clase: " + horaFinClaseTime);

            if (horaFinClaseTime.isAfter(horaFinTime)) {
                horaFinClaseTime = horaFinTime;
                System.out.println("Ajustando hora de fin de clase: " + horaFinClaseTime);
            }

            String horaInicioStr = horaInicioTime.format(formatter);
            String horaFinClaseStr = horaFinClaseTime.format(formatter);

            if (isDuplicate(conn, profesorId, dia, horaInicioStr, horaFinClaseStr)) {
                JOptionPane.showMessageDialog(this, "Horario duplicado. No se ha añadido.");
                return;
            }

            System.out.println("|" + asignaturaId + "|" + profesorId + "|" + aulaId + "|" + dia + "|" + horaInicioStr + "|" + horaFinClaseStr);

            String insertSQL = "INSERT INTO PUBLIC.INSTITUTO.HORARIOS (\"ID asignatura\", \"ID profesor\", \"ID aula\", \"dia de la semana\", \"hora de inicio\", \"hora de fin\") VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(insertSQL)) {
                pstmt.setInt(1, asignaturaId);
                pstmt.setInt(2, profesorId);
                pstmt.setInt(3, aulaId);
                pstmt.setString(4, dia);
                pstmt.setString(5, horaInicioStr);
                pstmt.setString(6, horaFinClaseStr);
                pstmt.executeUpdate();
                System.out.println("Consulta SQL: " + pstmt.toString());
            }

            horaInicioTime = horaFinClaseTime;
        }
        JOptionPane.showMessageDialog(this, "Horario añadido correctamente.");
        dispose();
        if (parentPanel != null) {
            String selectedTable = "horarios";
            parentPanel.mostrarDatosEnJTable(selectedTable);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    } catch (DateTimeParseException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al parsear las horas: " + e.getMessage());
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AñadirHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AñadirHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AñadirHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AñadirHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AñadirHorarios(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
