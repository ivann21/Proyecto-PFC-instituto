/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package instituto.busquedas.a√±adir;

import instituto.busquedas.Busqueda;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
public class EditarAulas extends javax.swing.JFrame {

    
    private Busqueda parentPanel;
    private int idAula;
    
    public EditarAulas(Object[] aulaData,Busqueda parentPanel) {
        try {
            this.parentPanel = parentPanel;
            initComponents();
            SpinnerModel spinnerModel = new SpinnerNumberModel(0, 0, 50, 1); 
            capacidadSpinner.setModel(spinnerModel);
            nombreField.setText(aulaData[0].toString());
            ubicacionComboBox.setSelectedItem(aulaData[1].toString());
            capacidadSpinner.setValue(Integer.parseInt(aulaData[2].toString()));
            pizarraCheckBox.setSelected((Boolean) aulaData[3]);
            ordenadoresCheckBox.setSelected((Boolean) aulaData[4]);
            idAula = obtenerIdAula(aulaData[0].toString(),aulaData[1].toString(),Integer.parseInt(aulaData[2].toString()),(Boolean) aulaData[3],(Boolean) aulaData[4]);
        } catch (SQLException ex) {
            Logger.getLogger(EditarAulas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      public int obtenerIdAula(String nombre, String ubicacion, int capacidad, boolean tienePizarra, boolean tieneOrdenadores) throws SQLException {
        int id = -1; 
        String query = "SELECT \"ID aula\" FROM PUBLIC.INSTITUTO.AULAS WHERE NOMBRE = ? AND UBICACION = ? AND CAPACIDAD_AULA = ? AND PIZARRA = ? AND ORDENADORES = ?";
        try {
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/", "SA", "")) {
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, nombre);
            statement.setString(2, ubicacion);
            statement.setInt(3, capacidad);
            statement.setBoolean(4, tienePizarra);
            statement.setBoolean(5, tieneOrdenadores);
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    id = resultSet.getInt("ID aula");
                }
            }
        }
        }
        }catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
        }
        return id;
    }
public  String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");

            byte[] hashedBytes = md.digest(password.getBytes());

            String hashedPassword = Base64.getEncoder().encodeToString(hashedBytes);

            return hashedPassword;
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        nombreField = new javax.swing.JTextField();
        apellidoLabel = new javax.swing.JLabel();
        correoLabel = new javax.swing.JLabel();
        ubicacionComboBox = new javax.swing.JComboBox<>();
        capacidadSpinner = new javax.swing.JSpinner();
        pizarraCheckBox = new javax.swing.JCheckBox();
        ordenadoresCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar Profesores");

        jButton1.setText("editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nameLabel.setText("nombre");

        apellidoLabel.setText("ubicacion");

        correoLabel.setText("capacidad del aula");

        ubicacionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Edificio Izquierdo", "Edificio central", "Edificio Derecho" }));

        pizarraCheckBox.setText("pizarra");

        ordenadoresCheckBox.setText("ordenadores");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ubicacionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apellidoLabel)
                            .addComponent(correoLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(capacidadSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pizarraCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(ordenadoresCheckBox)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ubicacionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(correoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capacidadSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pizarraCheckBox)
                    .addComponent(ordenadoresCheckBox))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String nombre = nombreField.getText().trim();
    String ubicacion = ubicacionComboBox.getSelectedItem().toString();
    int capacidad = (int) capacidadSpinner.getValue();
    boolean tienePizarra = pizarraCheckBox.isSelected();
    boolean tieneOrdenadores = ordenadoresCheckBox.isSelected();

    if (nombre.isEmpty() || ubicacion.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
    } else if (capacidad < 0 || capacidad > 200) { 
        JOptionPane.showMessageDialog(null, "La capacidad debe estar entre 0 y 200", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        try {
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            try (Connection connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/", "SA", "")) {
                String consultaVerificacion = "SELECT COUNT(*) FROM PUBLIC.INSTITUTO.AULAS WHERE NOMBRE = ? AND \"ID aula\" <> ?";
                try (PreparedStatement stmtVerificacion = connection.prepareStatement(consultaVerificacion)) {
                    stmtVerificacion.setString(1, nombre);
                    stmtVerificacion.setInt(2, idAula);
                    ResultSet rs = stmtVerificacion.executeQuery();
                    if (rs.next() && rs.getInt(1) > 0) {
                        JOptionPane.showMessageDialog(null, "El nombre del aula ya existe en la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        String consultaSQL = "UPDATE PUBLIC.INSTITUTO.AULAS SET NOMBRE=?, UBICACION=?, CAPACIDAD_AULA=?, PIZARRA=?, ORDENADORES=? WHERE \"ID aula\"=?";
                        try (PreparedStatement stmt = connection.prepareStatement(consultaSQL)) {
                            stmt.setString(1, nombre);
                            stmt.setString(2, ubicacion);
                            stmt.setInt(3, capacidad);
                            stmt.setBoolean(4, tienePizarra);
                            stmt.setBoolean(5, tieneOrdenadores);
                            stmt.setInt(6, idAula);

                            int filasAfectadas = stmt.executeUpdate();
                            if (filasAfectadas > 0) {
                                JOptionPane.showMessageDialog(null, "Los datos se han actualizado exitosamente", "√âxito", JOptionPane.INFORMATION_MESSAGE);
                                dispose();
                                if (this.getParent() != null && this.getParent().isEnabled()) {
                                    this.getParent().setEnabled(true); 
                                }
                                if (parentPanel != null) {
                                    String selectedTable = "aulas";
                                    parentPanel.mostrarDatosEnJTable(selectedTable);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No se encontr√≥ ning√∫n aula con el ID proporcionado", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Hubo un error con la base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarAulas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarAulas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarAulas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarAulas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Object[] aulaData = {};
                new EditarAulas(aulaData,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JSpinner capacidadSpinner;
    private javax.swing.JLabel correoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nombreField;
    private javax.swing.JCheckBox ordenadoresCheckBox;
    private javax.swing.JCheckBox pizarraCheckBox;
    private javax.swing.JComboBox<String> ubicacionComboBox;
    // End of variables declaration//GEN-END:variables
}
